//THIS FILE IS PROCEDURALY GENERATED BY 'TypelistGENERATO.cpp' IF THE PRESENT TYPELIST ARE TO SHORT GO THERE RECOMPILE USING A BIGGER 'int depth'
//USE OF THIS : namespace CONDITIONAL_TEXT {typedef TYPELIST((float, double, int, unsigned int, std::string)) CONDITIONAL_TEXT_TYPE;} 

#pragma once 
class null_typelist {};
template <class H, class T>
struct typelist
{
	typedef H head;
	typedef T tail;
};
template <class Fun> struct cons;
template <class T0>   struct cons<void(*)(T0)>
{

	typedef typelist<T0,null_typelist> type;

};
template <class T0,class T1>   struct cons<void(*)(T0,T1)>
{

	typedef typelist<T0,typelist<T1,null_typelist>> type;

};
template <class T0,class T1,class T2>   struct cons<void(*)(T0,T1,T2)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,null_typelist>>> type;

};
template <class T0,class T1,class T2,class T3>   struct cons<void(*)(T0,T1,T2,T3)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,null_typelist>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4>   struct cons<void(*)(T0,T1,T2,T3,T4)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,null_typelist>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5>   struct cons<void(*)(T0,T1,T2,T3,T4,T5)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,null_typelist>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,null_typelist>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,null_typelist>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,null_typelist>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,null_typelist>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,null_typelist>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,null_typelist>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,null_typelist>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,null_typelist>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,null_typelist>>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14,class T15>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,typelist<T15,null_typelist>>>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14,class T15,class T16>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,typelist<T15,typelist<T16,null_typelist>>>>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14,class T15,class T16,class T17>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,typelist<T15,typelist<T16,typelist<T17,null_typelist>>>>>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14,class T15,class T16,class T17,class T18>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,typelist<T15,typelist<T16,typelist<T17,typelist<T18,null_typelist>>>>>>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14,class T15,class T16,class T17,class T18,class T19>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,typelist<T15,typelist<T16,typelist<T17,typelist<T18,typelist<T19,null_typelist>>>>>>>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14,class T15,class T16,class T17,class T18,class T19,class T20>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,typelist<T15,typelist<T16,typelist<T17,typelist<T18,typelist<T19,typelist<T20,null_typelist>>>>>>>>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14,class T15,class T16,class T17,class T18,class T19,class T20,class T21>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,typelist<T15,typelist<T16,typelist<T17,typelist<T18,typelist<T19,typelist<T20,typelist<T21,null_typelist>>>>>>>>>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14,class T15,class T16,class T17,class T18,class T19,class T20,class T21,class T22>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,typelist<T15,typelist<T16,typelist<T17,typelist<T18,typelist<T19,typelist<T20,typelist<T21,typelist<T22,null_typelist>>>>>>>>>>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14,class T15,class T16,class T17,class T18,class T19,class T20,class T21,class T22,class T23>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,typelist<T15,typelist<T16,typelist<T17,typelist<T18,typelist<T19,typelist<T20,typelist<T21,typelist<T22,typelist<T23,null_typelist>>>>>>>>>>>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14,class T15,class T16,class T17,class T18,class T19,class T20,class T21,class T22,class T23,class T24>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,typelist<T15,typelist<T16,typelist<T17,typelist<T18,typelist<T19,typelist<T20,typelist<T21,typelist<T22,typelist<T23,typelist<T24,null_typelist>>>>>>>>>>>>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14,class T15,class T16,class T17,class T18,class T19,class T20,class T21,class T22,class T23,class T24,class T25>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,typelist<T15,typelist<T16,typelist<T17,typelist<T18,typelist<T19,typelist<T20,typelist<T21,typelist<T22,typelist<T23,typelist<T24,typelist<T25,null_typelist>>>>>>>>>>>>>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14,class T15,class T16,class T17,class T18,class T19,class T20,class T21,class T22,class T23,class T24,class T25,class T26>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,typelist<T15,typelist<T16,typelist<T17,typelist<T18,typelist<T19,typelist<T20,typelist<T21,typelist<T22,typelist<T23,typelist<T24,typelist<T25,typelist<T26,null_typelist>>>>>>>>>>>>>>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14,class T15,class T16,class T17,class T18,class T19,class T20,class T21,class T22,class T23,class T24,class T25,class T26,class T27>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,typelist<T15,typelist<T16,typelist<T17,typelist<T18,typelist<T19,typelist<T20,typelist<T21,typelist<T22,typelist<T23,typelist<T24,typelist<T25,typelist<T26,typelist<T27,null_typelist>>>>>>>>>>>>>>>>>>>>>>>>>>>> type;

};
template <class T0,class T1,class T2,class T3,class T4,class T5,class T6,class T7,class T8,class T9,class T10,class T11,class T12,class T13,class T14,class T15,class T16,class T17,class T18,class T19,class T20,class T21,class T22,class T23,class T24,class T25,class T26,class T27,class T28>   struct cons<void(*)(T0,T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28)>
{

	typedef typelist<T0,typelist<T1,typelist<T2,typelist<T3,typelist<T4,typelist<T5,typelist<T6,typelist<T7,typelist<T8,typelist<T9,typelist<T10,typelist<T11,typelist<T12,typelist<T13,typelist<T14,typelist<T15,typelist<T16,typelist<T17,typelist<T18,typelist<T19,typelist<T20,typelist<T21,typelist<T22,typelist<T23,typelist<T24,typelist<T25,typelist<T26,typelist<T27,typelist<T28,null_typelist>>>>>>>>>>>>>>>>>>>>>>>>>>>>> type;

};


#define TYPELIST(a) cons< void (*)a >::type

