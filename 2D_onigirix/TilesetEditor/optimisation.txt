- refaire le système des polices
- un mode resize rapide dans la fenêtre c.a.d gpu resizing...
- faire un truc pour supp les recharger
- faire un id pour les rec 
- dans draw minimiser les appels des fct get car ils sont gourmants en boucles 
un fonction qui s'execute en tout cas à chaque boucle avant l'affichage
-bien refaire le close !
-faire un état : focus
-alocatio /désaloc de resource pour les états

//last idea

rendre la classe scroll comme un widget evite de faire des putin de cas speciaux ....
autoriser les element a aparaitre hors du widget
autoriser un display des element du widget au moment ou le widget est display (tous a la foi !!!)
une fonction pour appliquer la même fonction a tous les rectangle d'un widget d un coup !
finaly allow rectangle to have shape 

si l image est même taille que le rectangle -> no linear transform else yes

Une police a une fonction display character comme ca plusieur type de ploces sont possibles (ex gif as character etc...)

ajouter la fast map dans tous les image / polices / etcs dealer pour meilleur performance (c.f.solution tester)

ammeliorer l acces au scroll 

enable quality change in cideo player 

si un widget est coupé les child du widget son il aussi coupé
PAS LA BONNE SOL :: --> donc d'abord evaluer les cut rectangles de widget et après ceux des rectangles 
SOLUTION :: --> remonter dans les relative element jusqua arriver a la fenetre et si le relative clip rectangle a deja ete calculer ne pas le recalculer
algo:
- remonter au premier parent calculer sont clip rectangle set son clip rectangle remonter au prent plus proch etc 
- quand on doit calculer le clip rectangle du parent par la suit il se peux qu il ai deja ete set par un child du coup rien a refaire dans ce cas

regler les petit problem dans le positionement

improve the style_etat_data ex le fait  que l on doive les ajouter à point_styles etc ... a la creation passer le rectangle en parametre 

use is_ready in video to rehandle --> rewrite video more properly

in rectangle provide function such as display border or get clip rectangle to simplify specialisation ex: si on prend un rect  qui fait des feux d artifice (un child de rect) et bien ca peux etre bien pour ajouter une bordure autour de just apeler la fonction draw border dans le draw du feu dartifice

faire le tri au moment des display packet pas avant 

ne pas utiliser la everyframe function du widget car elle doit etre disponible pour l utilisateure

faire heriter les widget de widget en protected ou private comme ca on peux pas le modifier de l exterieur par erreure.

Use for formae a draw throw a template with fonction as parameter wich only call the function for the given values  : cf http://stackoverflow.com/questions/4860762/c-can-compilers-inline-a-function-pointer?noredirect=1&lq=1 http://stackoverflow.com/a/4860805/4722868  http://stackoverflow.com/questions/4860762/c-can-compilers-inline-a-function-pointer?noredirect=1&lq=1
	- first intersect the rectangle where the geometry is bound and the display one
	- then test every pixel in that intersection rectangle ( ATTENTION apeller les fonctions de teste is in qui ont pas le test du in rectangle dedans  )
	- faire les 2 etapesw superieur pour chaques sous geometries 
	---> cette approche permet de ne pas tester tout les pixel si on sait comment ittérer sur les pixel valides ---> ex le degment on inter en direction diagonale. on sais les espacement entre les pixel etc on peux predire .... 
	- aproche du segment première ligne tester jusqua être dehors dessendre d'un ligne et commencer a la valeure qui avais fonctionnéee a la ligne du dessus jusqu'a etre dehors puis aller dessous a la première valeur qui avais fonctionnée etc...
	- IMPORTANT on peux aussi predire le minimum que l 'on doit avancer a chaque passage de ligne au debut celons la pente 
	- this can maybeebe multithreaded dividing the image in part faire de thread worker et faire gaffe a leur nombre etc... mais ca c est pour après

- faire une image geometrie semblale a celle du lecteur video avec differente frame qui est rendered avec un autre graphic core ?! 
- aussi permettre juste le display in frame pas en tant qu une image 
- pourquoi pas etc -> multi thread peux etre peut etre pas la bonne aproche tout dois etre fais par le display engine ou option display engine independant stream image ?? en multithread comme vlc ?
maybee support svg animation 

- for figure recognition use : http://www.nerdblog.com/2006/12/how-slow-is-dynamiccast.html methode of the virtual methode 

- faire le update au dernier moment pour les geometrie comme ca si les var d aides sont pas utilisee elle sont pas compilee

In opengl for drawing besier this is interesting  http://ciechanowski.me/blog/2014/02/18/drawing-bezier-curves/
_____________________________________________________________________________________________________

CONCEPT DU DisplayPaquet:

classe qui a :

- un z index (sous forme de tableau par importance de l index (multi index pour les child))
- une fonction void draw(DisplayEngine*) qui affiche sont paquet grace qu fonction du pisplay engine 

et rien d autre 

ex:

- display image (input rectangle, output rectangle)
- display rectangle on color
- display line one color
- display segment
- display image + mask (two input rectangle , one output rectangle)
- display besier curve


_____________________________________________________________________________________________________

classe DisplayEngine

qui a :

tout les fonction de display en imaginaire pure .

la classe est surcharger pour afficher avec differentes api :
- SDL
- SDL Hardware
- Opengl
et peux être un jour 
- Vulkan
- directx

Attention : output an Image class !
___________________________________________________________________________________________________

un fonction update qui realise les demande de transfer d images entres les apis


___________________________________________________________________________________________________

une fonction predict update qui predit les update d image necessaire avant le display 

___________________________________________________________________________________________________